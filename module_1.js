// GOIT - TASKS, Modul 1 Змінні та типи. Розгалуження. Цикли.
// Information --------------------------------------------------Task 1---------------------------------------

// Змінні використовуються для зберігання даних. У кожної змінної є ідентифікатор (назва змінної). Значення кожної змінної зберігається в оперативній пам'яті.
// Змінну можна уявити як коробку з написом (ім'я змінної), в якій щось знаходиться (значення змінної).

// <ключове слово> <назва змінної> = <значення>

// Оголошення змінної починається з ключового слова const. Така змінна має бути одразу ініціалізована початковим значенням, і такій змінній не можна надати інше значення після її ініціалізації.
// Увага

// Створення змінної без ключового слова const призведе до помилки.

// const age = 20;
// const userName = "Mango";
// const socialProfileTag = "@gluck";
// const totalWorkerSalary = 4052;

// В JavaScript назва змінної записується в camelCase-нотації. Перше слово пишеться маленькими буквами, а кожне наступне починається з великої. Назви змінних чутливі до регістру, тобто user, usEr і User - це різні змінні.

// ------------------------------------------------------------Task----------------------------------------
// До завдання
// Оголоси дві змінні, productName для назви товару, і pricePerItem для зберігання ціни за штуку. При оголошенні надай змінним наступні значення:
// назва - рядок "Droid";
// ціна за штуку - число 2000.

// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Change code below this line
// console.log(productName);
// 'Droid'
// const productName = "Droid";
// console.log(pricePerItem);
// 2000
// const pricePerItem = 2000;
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// ТЕСТИ
// Оголошена змінна productName
// Значення змінної productName - це рядок "Droid"
// Оголошена змінна pricePerItem
// Значення змінної pricePerItem - це число 2000

// Information --------------------------------------------------Task 2---------------------------------------
// Для того щоб оголосити змінну, якій у майбутньому можна буде присвоїти нове значення, використовується ключове слово let. Створення змінної без ключового слова let або const призведе до помилки.

// let age = 5;
// age = 10;

// let username = "Mango";
// username = "Poly";
// Спроба звернутися до змінної за ім'ям до її оголошення, викличе помилку.

// Наприклад, не можна намагатися прочитати або змінити значення змінної до її оголошення:

// // ❌ Неправильно, буде помилка
// age = 15; // ReferenceError: Cannot access 'age' before initialization
// console.log(age); // ReferenceError: age is not defined

// // Оголошення змінної age
// let age = 20;

// // ✅ Правильно, звертаємося після оголошення
// age = 25;
// console.log(age); // 25

// ------------------------------------------------------------Task----------------------------------------
// До завдання
// Ім'я товару змінили на "Repair droid" і збільшили його ціну на 1500 кредитів. Перевизнач значення змінних pricePerItem і productName після їх оголошення.

// // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// let productName = "Droid";
// let pricePerItem = 2000;

// // Change code below this line
// productName = "Repair droid";
// pricePerItem = 3500;
// // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// ТЕСТИ
// Змінна pricePerItem оголошена за допомогою let
// При оголошенні змінної pricePerItem присвоєно значення — число 2000
// Змінній pricePerItem присвоєно нове значення, більше за попереднє на 1500
// Змінна productName оголошена за допомогою let
// При оголошенні змінної productName присвоєно значення — рядок "Droid"
// Змінній productName присвоєно нове значення — рядок "Repair droid"

// Information --------------------------------------------------Task 3---------------------------------------
// В JavaScript змінна не асоціюється з будь-яким типом даних, тип є у її значення. Тобто змінна може зберігати значення різних типів.

// Number - цілі числа і числа з плаваючою комою (крапкою).
// String - рядки, послідовність від нуля або більше символів. Рядок починається і закінчується одинарною ' або подвійними лапками ".
// Boolean - логічний тип даних, прапорці стану. Всього два значення: true і false. Наприклад, на питання, чи увімкнено світло в кімнаті, можна відповісти так (true) або ні (false).
// // Числа
// const age = 20;
// const salary = 3710.84;

// // Рядки
// const name = "Mango";
// const description = "JavaSript essentials";

// // Булі
// const isModalOpen = true;
// const isLoggedIn = false;
// ------------------------------------------------------------Task----------------------------------------

// Оголоси наступні змінні, використовуючи ключове слово const або let, і присвой їм відповідні значення.

// topSpeed - число 160.
// distance - число 617.54.
// login - рядок "mango935".
// isOnline - буль true.
// isAdmin - буль false.
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// // Change code below this line
// const topSpeed = 160;
// const distance = 617.54;
// const login = "mango935";
// const isOnline = true;
// const isAdmin = false;
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Оголошена змінна topSpeed
// Значення змінної topSpeed - це число 160
// Оголошена змінна distance
// Значення змінної distance - це число 617.54
// Оголошена змінна login
// Значення змінної login - це рядок "mango935"
// Оголошена змінна isOnline
// Значення змінної isOnline - це буль true
// Оголошена змінна isAdmin
// Значення змінної isAdmin - це буль false

// Information --------------------------------------------------Task 4---------------------------------------
// Призначення, функціонал і пріоритет (порядок) операцій нічим не відрізняються від шкільного курсу алгебри. Оператори повертають значення як результат виразу.

// const x = 10;
// const y = 5;

// // Додавання
// console.log(x + y); // 15

// // Віднімання
// console.log(x - y); // 5

// // Множення
// console.log(x * y); // 50

// // Ділення
// console.log(x / y); // 2
// Корисно

// Важливо запам'ятати правильне іменування складових алгебраїчного виразу: +, -, * і / називаються операторами, а те, на чому вони застосовуються (числа) - операнди.
// ------------------------------------------------------------Task----------------------------------------
// Доповни код, присвоївши змінній totalPrice вираз для підрахунку загальної суми замовлення.
// Змінна pricePerItem зберігає ціну однієї одиниці товару, а orderedQuantity - кількість одиниць товару в замовленні.

// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// const pricePerItem = 3500;
// const orderedQuantity = 4;

// // Change code below this line
// const totalPrice = pricePerItem * orderedQuantity;

// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Оголошена змінна pricePerItem
// Значення змінної pricePerItem - це число 3500
// Оголошена змінна orderedQuantity
// Значення змінної orderedQuantity - це число 4
// Оголошена змінна totalPrice
// Значення змінної totalPrice - це число 14000
// Використаний оператор *

// Information --------------------------------------------------Task 5---------------------------------------
// Шаблонні рядки — це альтернатива конкатенації зі зручнішим синтаксисом. Шаблонний рядок береться у зворотні (скісні) лапки, замість подвійних або одинарних, і може містити місцезаповнювачі, які позначаються знаком долара і фігурними дужками - ${вираз}.

// const guestName = "Mango";
// const roomNumber = 207;
// const greeting = `Ласкаво просимо ${guestName}, ви заселені у номер ${roomNumber}`;
// ------------------------------------------------------------Task----------------------------------------
// Оголоси змінну message і запиши в неї повідомлення про покупку, рядок у форматі: "You picked <назва товару>, price per item is <ціна товару> credits".
// Де < назва товару > і < ціна товару > — це значення змінних productName і pricePerItem.Використовуй синтаксис шаблонних рядків.

// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// const productName = "Droid";
// const pricePerItem = 3500;

// // Change code below this line
// const message = "You picked Droid, price per item is 3500 credits";
// console.log(message);
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Оголошена змінна productName
// Значення змінної productName - це рядок "Droid"
// Оголошена змінна pricePerItem
// Значення змінної price - це число 3500
// Оголошена змінна message
// Значення змінної message - це рядок "You picked Droid, price per item is 3500 credits"

// Information --------------------------------------------------Task 6---------------------------------------
// ЗАДАЧА: ЗАМОВЛЕННЯ ПРОДУКТУ
// ------------------------------------------------------------Task----------------------------------------
// Магазин з продажу ремонтних дроїдів готовий до відкриття, залишилося написати скрипт для їх замовлення. Оголоси змінні та присвой їм відповідні значення:

// pricePerDroid - ціна одного дроїда, значення 800
// orderedQuantity - кількість дроїдів у замовленні, значення 6
// deliveryFee - вартість доставки, значення 50
// totalPrice - загальна сума замовлення до сплати, не забудь про вартість доставки
// message - повідомлення про стан замовлення у форматі "You ordered droids worth <total price> credits. Delivery (<delivery fee> credits) is included in total price."

// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Change code below this line
// const pricePerDroid = 800;
// const orderedQuantity = 6;
// const deliveryFee = 50;
// let totalPrice = pricePerDroid * orderedQuantity + deliveryFee;
// const message = `You ordered droids worth ${totalPrice} credits. Delivery (${deliveryFee} credits) is included in total price.`
// console.log(totalPrice)
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Оголошена змінна orderedQuantity
// Значення змінної orderedQuantity - це число 6
// Оголошена змінна pricePerDroid
// Значення змінної pricePerDroid - це число 800
// Оголошена змінна deliveryFee
// Значення змінної deliveryFee - це число 50
// Оголошена змінна totalPrice
// Значення змінної totalPrice - це число 4850
// Оголошена змінна message
// Значення змінної message - це рядок "You ordered droids worth 4850 credits. Delivery (50 credits) is included in total price."

// Information --------------------------------------------------Task 7---------------------------------------
// Функція - це підпрограма, незалежна частина коду, призначена для багаторазового виконання конкретної задачі з різними початковими значеннями.

// Функцію можна уявити як чорний ящик — вона отримує щось на вході (дані), і повертає щось на виході (результат виконання коду всередині неї).

// // 1. Оголошення функції multiply
// function multiply() {
// // Тіло функції
//   console.log("multiply function invocation");
// }

// // 2. Виклики функції multiply
// multiply(); // multiply function invocation
// multiply(); // multiply function invocation
// multiply(); // multiply function invocation
// Оголошення функції починається з ключового слова function, за яким йде її ім'я — дієслово, що відповідає на питання «Що зробити?» і пара круглих дужок.
// Тіло функції береться у фігурні дужки { } і містить інструкції, які необхідно виконати під час її виклику.
// Потім, коли необхідно, функція викликається за допомогою імені та пари круглих дужок.
// ------------------------------------------------------------Task----------------------------------------
// Оголоси функцію sayHi, всередині якої додай console.log() з рядком "Hello, this is my first function!". Після оголошення виклич функцію sayHi.
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Change code below this line
// function sayHi (){
//   console.log("Hello, this is my first function!");
// }
// sayHi()
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// ТЕСТИ
// Очікується оголошення функції
// Функції присвоєно ім'я sayHi
// В тілі функції sayHi є console.log("Hello, this is my first function!")
// Після оголошення є виклик функції sayHi

// Information --------------------------------------------------Task 8---------------------------------------
// В круглих дужках після імені функції йдуть параметри - перелік даних, які функція очікує під час виклику.

// Параметри - це локальні змінні, доступні тільки у тілі функції. Вони розділяються комами. Параметрів може бути декілька або їх взагалі може не бути, тоді записуються просто порожні круглі дужки.

// Під час виклику функції, в круглих дужках можна передати аргументи - значення для оголошених параметрів функції.

// // 1. Оголошення параметрів x, y, z
// function multiply(x, y, z) {
//   console.log(`Результат множення дорівнює ${x * y * z}`);
// }

// // 2. Передача аргументів
// multiply(2, 3, 5); // Результат множення дорівнює 30
// multiply(4, 8, 12); // Результат множення дорівнює 384
// multiply(17, 6, 25); // Результат множення дорівнює 2550
// Порядок передачі аргументів повинен відповідати порядку оголошених параметрів: значення першого аргументу буде присвоєно першому параметру, другого аргументу - другому параметру тощо.
// ------------------------------------------------------------Task----------------------------------------
// Функція add повинна вміти додавати три числа і виводити результат у консоль. Додай функції add три параметри: a, b і c, які будуть отримувати значення аргументів під час її виклику.

// Доповни console.log() таким чином, щоб він логував рядок "Addition result equals <result>", де <result> - це сума переданих чисел.
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Change code below this line
// function add(a, b, c){

//   console.log(`Addition result equals ${a + b + c}`);
//   // Change code above this line
// }

// add(15, 27, 10);
// add(10, 20, 30);
// add(5, 10, 15);
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Оголошена функція add(a, b, c)
// Виклик add(15, 27, 10) виводить у консоль "Addition result equals 52"
// Виклик add(10, 20, 30) виводить у консоль "Addition result equals 60"
// Виклик add(5, 10, 15) виводить у консоль "Addition result equals 30"

// Information --------------------------------------------------Task 9---------------------------------------
// Оператор return використовується для передачі значення з тіла функції у зовнішній код. Коли інтерпретатор зустрічає return, він відразу ж виходить з функції (припиняє її виконання), і повертає вказане значення у те місце коду, де функція була викликана.

// function multiply(x, y, z) {
//   console.log("Код до return виконується звичайним чином");

//   // Повертаємо результат виразу множення
//   return x * y * z;

//   console.log("Цей лог ніколи не виконається, він стоїть після return");
// }

// // Результат роботи функції можна зберегти у змінну
// let result = multiply(2, 3, 5);
// console.log(result); // 30

// result = multiply(4, 8, 12);
// console.log(result); // 384

// result = multiply(17, 6, 25);
// console.log(result); // 2550
// Оператор return без явно вказаного значення повертає спеціальне значення undefined. За відсутності return у тілі функції, вона все одно поверне undefined.

// ------------------------------------------------------------Task----------------------------------------
// Доповни код функції add таким чином, щоб вона повертала результат додавання значень трьох параметрів: a, b і c.
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// function add(a, b, c) {
//   // Change code below this line

//   return a + b + c;
//   // Change code above this line
// }

// add(2, 5, 8); // 15

// console.log(add(15, 27, 10));
// console.log(add(10, 20, 30));
// console.log(add(5, 10, 15));
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Оголошена функція add(a, b, c)
// У функції add є оператор return
// Виклик add(15, 27, 10) повертає 52
// Виклик add(10, 20, 30) повертає 60
// Виклик add(5, 10, 15) повертає 30
// Виклик функції з випадковими, але валідними аргументами, повертає правильне значення

// Information --------------------------------------------------Task 10--------------------------------------

// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 11--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 12--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 13--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 14--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 15--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 16--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 17--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 18--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 19--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 20--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 21--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 22--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 23--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 24--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 25--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 26--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 27--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 28--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 29--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 30--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 31--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 32--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 33--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 34--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 35--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
// Information --------------------------------------------------Task 36--------------------------------------
// ------------------------------------------------------------Task----------------------------------------
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ТЕСТИ
